from aiogram import types
from database import database as db
import random
from keyboards.keyboards import story_markup
from aiogram.dispatcher.filters.state import State, StatesGroup


class Story(StatesGroup):
    text = State()


async def story_handler(message: types.Message):
    await message.answer('–£ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ —Ç–∏ –º–æ–∂–µ—à –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—ó –ª—é–¥–µ–π, —è–∫—ñ –ø–æ–¥—ñ–ª–∏–ª–∏—Å—å —Å–≤–æ—ó–º –≤–¥–∞–ª–∏–º —ñ –Ω–µ –¥—É–∂–µ —Å–µ–∫—Å—É–∞–ª—å–Ω–∏–º –¥–æ—Å–≤—ñ–¥–æ–º. –ê–±–æ —Ä–æ–∑–∫–∞–∑–∞—Ç–∏ —É—Å—ñ–º –ø—Ä–æ —Å–≤—ñ–π üó£Ô∏è', reply_markup=story_markup)


async def add_story(callback: types.CallbackQuery):
    await callback.message.answer("–ù–∞–ø–∏—à–∏ —Å–≤–æ—é —ñ—Å—Ç–æ—Ä—ñ—é ‚úçÔ∏è")
    await Story.text.set()


async def read_story(callback: types.CallbackQuery):
    stories = db.get_stories()
    if stories:
        story = random.choice(stories)
        _, story_text, status = story
        await callback.message.answer(f'_{story_text}_', parse_mode='Markdown', reply_markup=story_markup)
